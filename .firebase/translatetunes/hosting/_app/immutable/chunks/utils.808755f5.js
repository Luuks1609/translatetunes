import{w as m}from"./index.5c011611.js";import{Y as k}from"./scheduler.635b56cd.js";const u=m(localStorage.accessToken||"");u.subscribe(n=>localStorage.setItem("accessToken",n));const d=m(localStorage.refreshToken||"");d.subscribe(n=>localStorage.setItem("refreshToken",n));var f={aar:"aa",abk:"ab",afr:"af",aka:"ak",alb:"sq",amh:"am",ara:"ar",arg:"an",arm:"hy",asm:"as",ava:"av",ave:"ae",aym:"ay",aze:"az",bak:"ba",bam:"bm",baq:"eu",bel:"be",ben:"bn",bih:"bh",bis:"bi",bos:"bs",bre:"br",bul:"bg",bur:"my",cat:"ca",cha:"ch",che:"ce",chi:"zh",chu:"cu",chv:"cv",cor:"kw",cos:"co",cre:"cr",cze:"cs",dan:"da",div:"dv",dut:"nl",dzo:"dz",eng:"en",epo:"eo",est:"et",ewe:"ee",fao:"fo",fij:"fj",fin:"fi",fre:"fr",fry:"fy",ful:"ff",geo:"ka",ger:"de",gla:"gd",gle:"ga",glg:"gl",glv:"gv",gre:"el",grn:"gn",guj:"gu",hat:"ht",hau:"ha",heb:"he",her:"hz",hin:"hi",hmo:"ho",hrv:"hr",hun:"hu",ibo:"ig",ice:"is",ido:"io",iii:"ii",iku:"iu",ile:"ie",ina:"ia",ind:"id",ipk:"ik",ita:"it",jav:"jv",jpn:"ja",kal:"kl",kan:"kn",kas:"ks",kau:"kr",kaz:"kk",khm:"km",kik:"ki",kin:"rw",kir:"ky",kom:"kv",kon:"kg",kor:"ko",kua:"kj",kur:"ku",lao:"lo",lat:"la",lav:"lv",lim:"li",lin:"ln",lit:"lt",ltz:"lb",lub:"lu",lug:"lg",mac:"mk",mah:"mh",mal:"ml",mao:"mi",mar:"mr",may:"ms",mlg:"mg",mlt:"mt",mon:"mn",nau:"na",nav:"nv",nbl:"nr",nde:"nd",ndo:"ng",nep:"ne",nno:"nn",nob:"nb",nor:"no",nya:"ny",oci:"oc",oji:"oj",ori:"or",orm:"om",oss:"os",pan:"pa",per:"fa",pli:"pi",pol:"pl",por:"pt",pus:"ps",que:"qu",roh:"rm",rum:"ro",run:"rn",rus:"ru",sag:"sg",san:"sa",sin:"si",slo:"sk",slv:"sl",sme:"se",smo:"sm",sna:"sn",snd:"sd",som:"so",sot:"st",spa:"es",srd:"sc",srp:"sr",ssw:"ss",sun:"su",swa:"sw",swe:"sv",tah:"ty",tam:"ta",tat:"tt",tel:"te",tgk:"tg",tgl:"tl",tha:"th",tib:"bo",tir:"ti",ton:"to",tsn:"tn",tso:"ts",tuk:"tk",tur:"tr",twi:"tw",uig:"ug",ukr:"uk",urd:"ur",uzb:"uz",ven:"ve",vie:"vi",vol:"vo",wel:"cy",wln:"wa",wol:"wo",xho:"xh",yid:"yi",yor:"yo",zha:"za",zul:"zu"},y={afar:"aa",abkhazian:"ab",afrikaans:"af",akan:"ak",albanian:"sq",amharic:"am",arabic:"ar",aragonese:"an",armenian:"hy",assamese:"as",avaric:"av",avestan:"ae",aymara:"ay",azerbaijani:"az",bashkir:"ba",bambara:"bm",basque:"eu",belarusian:"be",bengali:"bn","bihari languages":"bh",bislama:"bi",tibetan:"bo",bosnian:"bs",breton:"br",bulgarian:"bg",burmese:"my",catalan:"ca",valencian:"ca",czech:"cs",chamorro:"ch",chechen:"ce",chinese:"zh","church slavic":"cu","old slavonic":"cu","church slavonic":"cu","old bulgarian":"cu","old church slavonic":"cu",chuvash:"cv",cornish:"kw",corsican:"co",cree:"cr",welsh:"cy",danish:"da",german:"de",divehi:"dv",dhivehi:"dv",maldivian:"dv",dutch:"nl",flemish:"nl",dzongkha:"dz",greek:"el",english:"en",esperanto:"eo",estonian:"et",ewe:"ee",faroese:"fo",persian:"fa",fijian:"fj",finnish:"fi",french:"fr","western frisian":"fy",fulah:"ff",georgian:"ka",gaelic:"gd","scottish gaelic":"gd",irish:"ga",galician:"gl",manx:"gv",guarani:"gn",gujarati:"gu",haitian:"ht","haitian creole":"ht",hausa:"ha",hebrew:"he",herero:"hz",hindi:"hi","hiri motu":"ho",croatian:"hr",hungarian:"hu",igbo:"ig",icelandic:"is",ido:"io","sichuan yi":"ii",nuosu:"ii",inuktitut:"iu",interlingue:"ie",occidental:"ie",interlingua:"ia",indonesian:"id",inupiaq:"ik",italian:"it",javanese:"jv",japanese:"ja",kalaallisut:"kl",greenlandic:"kl",kannada:"kn",kashmiri:"ks",kanuri:"kr",kazakh:"kk","central khmer":"km",kikuyu:"ki",gikuyu:"ki",kinyarwanda:"rw",kirghiz:"ky",kyrgyz:"ky",komi:"kv",kongo:"kg",korean:"ko",kuanyama:"kj",kwanyama:"kj",kurdish:"ku",lao:"lo",latin:"la",latvian:"lv",limburgan:"li",limburger:"li",limburgish:"li",lingala:"ln",lithuanian:"lt",luxembourgish:"lb",letzeburgesch:"lb","luba-katanga":"lu",ganda:"lg",macedonian:"mk",marshallese:"mh",malayalam:"ml",maori:"mi",marathi:"mr",malay:"ms",malagasy:"mg",maltese:"mt",mongolian:"mn",nauru:"na",navajo:"nv",navaho:"nv","ndebele, south":"nr","south ndebele":"nr","ndebele, north":"nd","north ndebele":"nd",ndonga:"ng",nepali:"ne","norwegian nynorsk":"nn","nynorsk, norwegian":"nn","norwegian bokmål":"nb","bokmål, norwegian":"nb",norwegian:"no",chichewa:"ny",chewa:"ny",nyanja:"ny",occitan:"oc",ojibwa:"oj",oriya:"or",oromo:"om",ossetian:"os",ossetic:"os",panjabi:"pa",punjabi:"pa",pali:"pi",polish:"pl",portuguese:"pt",pushto:"ps",pashto:"ps",quechua:"qu",romansh:"rm",romanian:"ro",moldavian:"ro",moldovan:"ro",rundi:"rn",russian:"ru",sango:"sg",sanskrit:"sa",sinhala:"si",sinhalese:"si",slovak:"sk",slovenian:"sl","northern sami":"se",samoan:"sm",shona:"sn",sindhi:"sd",somali:"so","sotho, southern":"st",spanish:"es",castilian:"es",sardinian:"sc",serbian:"sr",swati:"ss",sundanese:"su",swahili:"sw",swedish:"sv",tahitian:"ty",tamil:"ta",tatar:"tt",telugu:"te",tajik:"tg",tagalog:"tl",thai:"th",tigrinya:"ti",tonga:"to",tswana:"tn",tsonga:"ts",turkmen:"tk",turkish:"tr",twi:"tw",uighur:"ug",uyghur:"ug",ukrainian:"uk",urdu:"ur",uzbek:"uz",venda:"ve",vietnamese:"vi",volapük:"vo",walloon:"wa",wolof:"wo",xhosa:"xh",yiddish:"yi",yoruba:"yo",zhuang:"za",chuang:"za",zulu:"zu"};const v=Object.values(f).sort();var h=n=>{if(typeof n!="string")throw new Error('The "language" must be a string, received '+typeof n);if(n.length>100)throw new Error(`The "language" is too long at ${n.length} characters`);if(n=n.toLowerCase(),n=y[n]||f[n]||n,!v.includes(n))throw new Error(`The language "${n}" is not part of the ISO 639-1`);return n};function b(){var n=Object.create(null);function t(a){delete n[a]}this.set=function(a,r,e){if(e!==void 0&&(typeof e!="number"||isNaN(e)||e<=0))throw new Error("Cache timeout must be a positive number");var s=n[a];s&&clearTimeout(s.timeout);var l={value:r,expire:e+Date.now()};return isNaN(l.expire)||(l.timeout=setTimeout(()=>t(a),e)),n[a]=l,r},this.del=function(a){var r=!0,e=n[a];return e?(clearTimeout(e.timeout),!isNaN(e.expire)&&e.expire<Date.now()&&(r=!1)):r=!1,r&&t(a),r},this.clear=function(){for(var a in n)clearTimeout(n[a].timeout);n=Object.create(null)},this.get=function(a){var r=n[a];if(r!==void 0){if(isNaN(r.expire)||r.expire>=Date.now())return r.value;delete n[a]}return null}}const g=new b;g.Cache=b;const w="https://translate.googleapis.com/translate_a/single";var j={fetch:({key:n,from:t,to:a,text:r})=>[`${w}?client=gtx&sl=${t}&tl=${a}&dt=t&q=${encodeURI(r)}`],parse:n=>n.json().then(t=>{if(!(t=t&&t[0]&&t[0][0]&&t[0].map(a=>a[0]).join("")))throw new Error("Translation not found");return t})},z={needkey:!0,fetch:({key:n,from:t,to:a,text:r})=>[`https://translate.yandex.net/api/v1.5/tr.json/translate?key=${n}&lang=${t}-${a}&text=${encodeURIComponent(r)}`,{method:"POST",body:""}],parse:n=>n.json().then(t=>{if(t.code!==200)throw new Error(t.message);return t.text[0]})};const x="https://libretranslate.com/translate";var $={needkey:!1,fetch:({url:n=x,key:t,from:a,to:r,text:e})=>[n,{method:"POST",body:JSON.stringify({q:e,source:a,target:r,api_key:t}),headers:{"Content-Type":"application/json"}}],parse:n=>n.json().then(t=>{if(!t)throw new Error("No response found");if(t.error)throw new Error(t.error);if(!t.translatedText)throw new Error("No response found");return t.translatedText})},T={needkey:!0,fetch:({key:n,from:t,to:a,text:r})=>[`https://api${/:fx$/.test(n)?"-free":""}.deepl.com/v2/translate?auth_key=${n}&source_lang=${t}&target_lang=${a}&text=${r=encodeURIComponent(r)}`,{method:"POST",body:""}],parse:async n=>{if(!n.ok)throw n.status===403?new Error("Auth Error, please review the key for DeepL"):new Error(`Error ${n.status}`);return n.json().then(t=>t.translations[0].text)}},S={google:j,yandex:z,libre:$,deepl:T};const c=function(n={}){if(!(this instanceof c))return new c(n);const t={from:"en",to:"en",cache:void 0,languages:h,engines:S,engine:"google",keys:{}},a=async(r,e={})=>{typeof e=="string"&&(e={to:e}),e.text=r,e.from=h(e.from||a.from),e.to=h(e.to||a.to),e.cache=e.cache||a.cache,e.engines=e.engines||{},e.engine=e.engine||a.engine,e.url=e.url||a.url,e.id=e.id||`${e.url}:${e.from}:${e.to}:${e.engine}:${e.text}`,e.keys=e.keys||a.keys||{};for(let i in a.keys)e.keys[i]=e.keys[i]||a.keys[i];e.key=e.key||a.key||e.keys[e.engine];const s=e.engines[e.engine]||a.engines[e.engine],l=g.get(e.id);if(l)return Promise.resolve(l);if(e.to===e.from)return Promise.resolve(e.text);if(s.needkey&&!e.key)throw new Error(`The engine "${e.engine}" needs a key, please provide it`);const o=s.fetch(e);return fetch(...o).then(s.parse).then(i=>g.set(e.id,i,e.cache))};for(let r in t)a[r]=n[r]===void 0?t[r]:n[r];return a},p=new c;p.Translate=c;const N=async(n,t,a)=>await p(n,{key:"AIzaSyC0RyDn8GCcPv_VEndWHo7YJ0cLB1L_HYI",from:t,to:a});async function E(n){const t=n,a=k(u),r=k(d),e=await fetch(t,{headers:{Authorization:`Bearer ${a}}`}});if(e.status===401||e.status===400){console.log("trying to get a new token");const s=await fetch("https://accounts.spotify.com/api/token",{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded",Authorization:`Basic ${btoa("ae8a8377a94d42d7b7e69086cde1bf6d:6901ef8b39ce4d1497749180106c32b5")}`},body:`grant_type=refresh_token&refresh_token=${r}`});if(s.ok){const o=(await s.json()).access_token;return u.set(o),(await fetch(t,{headers:{Authorization:`Bearer ${o}`}})).json()}}return e.json()}function I(n,t,a){const e=n.split(/[\n.!?;]/).map(o=>o.trim()).filter(o=>o.length>=t).map(o=>o.replace(/\([^)]*\)/g,"").trim()).filter(o=>o.length>0).filter(o=>!o.includes("*")),s=[],l=new Set;for(const o of e){const i=o.split("");[...new Set(i)].length/i.length<=a&&!l.has(o)&&(s.push(o),l.add(o))}for(let o=s.length-1;o>0;o--){const i=Math.floor(Math.random()*(o+1));[s[o],s[i]]=[s[i],s[o]]}return s}async function O(n){const t=[];for(const a of n){const r=`https://api.spotify.com/v1/tracks/${a}`,e=await E(r);e&&t.push(e)}return t}export{u as a,E as c,I as e,O as f,d as r,N as t};
